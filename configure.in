dnl Process this file with autoconf to produce a configure script.
dnl
dnl $Id: configure.in,v 1.58 2004/05/05 05:25:28 jason Exp $
dnl

AC_INIT(src/core_shntool.c)
AC_CANONICAL_HOST

AM_INIT_AUTOMAKE(shntool, 2.0.3)

AM_CONFIG_HEADER(include/config.h)

dnl Checks for Cygwin environment.
AC_CYGWIN

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_AWK
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl configure command-line options

dnl default modes - used if --with-modes is not specified
ac_build_modes="len fix md5 pad join split cat cmp cue conv info strip"

dnl default file formats - used if --with-formats is not specified
ac_build_formats="wav aiff shn flac ape ofr lpac wv cust null"

ac_alternate_modes=""
ac_alternate_formats=""

ac_alternate_modes_flag="false"
ac_alternate_formats_flag="false"

dnl mode module specification
AC_ARG_WITH(modes,
  [  --with-modes=LIST      Specify the default modes, as well as their order.
                         LIST is a comma-separated list of modes.
                         The default is:  len,fix,md5,pad,join,split,cat,cmp,cue,conv,info,strip],
  [ ac_alternate_modes_flag="true" ; ac_alternate_modes=`echo "$withval" | sed -e 's/,/ /g'`
])

dnl format module specification
AC_ARG_WITH(formats,
  [  --with-formats=LIST    Specify the default file formats, as well as their order.
                         LIST is a comma-separated list of file formats.
                         The default is:  wav,aiff,shn,flac,ape,ofr,lpac,wv,cust,null],
  [ ac_alternate_formats_flag="true" ; ac_alternate_formats=`echo "$withval" | sed -e 's/,/ /g'`
])

if test "$ac_alternate_modes_flag" = "false"; then
  ac_current_modes="$ac_build_modes"
else
  ac_current_modes="$ac_alternate_modes"
fi

if test "$ac_alternate_formats_flag" = "false"; then
  ac_current_formats="$ac_build_formats"
else
  ac_current_formats="$ac_alternate_formats"
fi

dnl are additional modules specified?

AC_ARG_WITH(extra-modes,
  [  --with-extra-modes=LIST
                         Specify additional modes to include.
                         LIST is a comma-separated list of modes to add.
                         These will be appended to the default modes.],
  [ ac_more_modes=`echo "$withval" | sed -e 's/,/ /g'`
    ac_current_modes="$ac_current_modes $ac_more_modes"
])

AC_ARG_WITH(extra-formats,
  [  --with-extra-formats=LIST
                         Specify additional file formats to include.
                         LIST is a comma-separated list of file formats to add.
                         These will be appended to the default file formats.],
  [ ac_more_formats=`echo "$withval" | sed -e 's/,/ /g'`
    ac_current_formats="$ac_current_formats $ac_more_formats"
])

ac_modes_list=
ac_formats_list=
mode_exists=false
format_exists=false

MODE_OBJS=
FORMAT_OBJS=
MODES_CONFIGURED=

format_aiff=false
format_ape=false
format_flac=false
format_lpac=false
format_ofr=false
format_shn=false
format_wv=false

for mode in $ac_current_modes; do
  if test `echo "$ac_modes_list" | grep -c "mode_${mode}\.c"` = "0"; then
    if test -f src/mode_${mode}.c; then
      ac_modes_list="${ac_modes_list}mode_${mode}.c "
      MODE_OBJS="${MODE_OBJS}mode_${mode}.\$(OBJEXT) "
      MODES_CONFIGURED="${MODES_CONFIGURED}${mode} "
      mode_exists=true
    else
      echo "** missing src/mode_${mode}.c - mode '$mode' will not be compiled"
    fi
  fi
done

for format in $ac_current_formats; do
  if test `echo "$ac_formats_list" | grep -c "format_${format}\.c"` = "0"; then
    if test -f src/format_${format}.c; then
      ac_formats_list="${ac_formats_list}format_${format}.c "
      FORMAT_OBJS="${FORMAT_OBJS}format_${format}.\$(OBJEXT) "
      format_exists=true
      case $format in
        aiff ) format_aiff=true ;;
        ape  ) format_ape=true ;;
        flac ) format_flac=true ;;
        lpac ) format_lpac=true ;;
        ofr  ) format_ofr=true ;;
        shn  ) format_shn=true ;;
        wv   ) format_wv=true ;;
      esac
    else
      echo "** missing src/format_${format}.c - format '$format' will not be compiled"
    fi
  fi
done

if test x$mode_exists = xfalse; then
  AC_MSG_ERROR(at least one valid mode must be specified)
fi

if test x$format_exists = xfalse; then
  AC_MSG_ERROR(at least one valid file format must be specified)
fi

AC_SUBST(MODE_OBJS)
AC_SUBST(FORMAT_OBJS)
AC_SUBST(MODES_CONFIGURED)

dnl Additional program checks, based on whether certain file formats are included in shntool

if test x$format_shn = xtrue; then
  AC_CHECK_PROG(SHORTEN,shorten,"yes","no")
  if test "$SHORTEN" = "no"; then
    echo "** install shorten at any time for .shn file support"
  fi
fi

if test x$format_flac = xtrue; then
  AC_CHECK_PROG(FLAC,flac,"yes","no")
  if test "$FLAC" = "no"; then
    echo "** install flac at any time for .flac file support"
  fi
fi

if test x$format_aiff = xtrue; then
  AC_CHECK_PROG(SOX,sox,"yes","no")
  if test "$SOX" = "no"; then
    echo "** install sox at any time for .aiff file support"
  fi
fi

if test x$format_ape = xtrue; then
  AC_CHECK_PROG(MAC,mac,"yes","no")
  if test "$MAC" = "no"; then
    echo "** install mac at any time for .ape file support"
  fi
fi

if test x$format_ofr = xtrue; then
  AC_CHECK_PROG(OPTIMFROG,ofr,"yes","no")
  if test "$OPTIMFROG" = "no"; then
    echo "** install ofr at any time for .ofr file support"
  fi
fi

if test x$format_lpac = xtrue; then
  AC_CHECK_PROG(LPAC,lpac,"yes","no")
  if test "$LPAC" = "no"; then
    echo "** install lpac at any time for .pac file support"
  fi
fi

if test x$format_wv = xtrue; then
  AC_CHECK_PROG(WAVPACK,wvunpack,"yes","no")
  if test "$WAVPACK" = "no"; then
    echo "** install wavpack at any time for .wv file support"
  fi
fi

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.
AC_FUNC_SETVBUF_REVERSED
AC_CHECK_FUNCS(strerror setlinebuf vsnprintf atol sysconf)

AC_OUTPUT(man/Makefile src/Makefile Makefile)

ac_compiled_modes=`echo "$ac_modes_list" | sed -e 's/mode_//g' -e 's/\.c//g'`
ac_compiled_formats=`echo "$ac_formats_list" | sed -e 's/format_//g' -e 's/\.c//g'`

echo "creating module glue files"
utils/glue.sh mode $ac_modes_list
utils/glue.sh format $ac_formats_list

echo ""
echo "$PACKAGE is now configured with the following options:"
echo ""
echo "version:                 $VERSION"
echo "supported modes:         $ac_compiled_modes"
echo "supported file formats:  $ac_compiled_formats"
echo "installation directory:  ${prefix}/bin"
echo ""
